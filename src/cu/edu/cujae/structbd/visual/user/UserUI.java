/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cu.edu.cujae.structbd.visual.user;

import cu.edu.cujae.structbd.dto.user.DeleteUserDTO;
import cu.edu.cujae.structbd.dto.user.ReadUserDTO;
import cu.edu.cujae.structbd.exceptions.user.AdminNotDeleteAdminException;
import cu.edu.cujae.structbd.exceptions.user.AtLeastOneAdminException;
import cu.edu.cujae.structbd.services.ServicesLocator;
import cu.edu.cujae.structbd.utils.AppCustomWindow;
import cu.edu.cujae.structbd.utils.UtilsConnector;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hector Angel Gomez
 */
public class UserUI extends AppCustomWindow {
    private List<ReadUserDTO> users = new LinkedList<>();
    
    public void start(){
        initComponents();
        this.jTable1.setComponentPopupMenu(this.jPopupMenu1);
        this.updateUI();
    }
    
    public void updateUI(){ 
        try {
            UtilsConnector.viewUtils.cleanTable(jTable1);
            
            this.users.clear();
            this.users = ServicesLocator.UserServices.readUsersForAdmin();
            
            DefaultTableModel model = (DefaultTableModel) this.jTable1.getModel();
                      
            this.users.forEach(u -> {
                model.addRow(new Object[]{u.getUsername(), u.getRole()});
            });
        } catch (SQLException | ClassNotFoundException ex) {
            UtilsConnector.viewMessagesUtils.showConecctionErrorMessage(this, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        editMenu = new javax.swing.JMenuItem();
        deleteMenu = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        editMenu.setText("Editar");
        editMenu.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editMenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(editMenu);

        deleteMenu.setText("Eliminar Usuario");
        deleteMenu.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteMenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Usuarios");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Nombre de Usuario", "Rol"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("Insertar");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuActionPerformed
        try {
            int selectRow = this.jTable1.getSelectedRow();
            
            if(selectRow >= 0){
                ReadUserDTO userSel = this.users.get(selectRow);
                
                boolean accept = UtilsConnector.viewMessagesUtils.showConfirmDialog(this, "Seguro que desea eliminar este usuario?");
                
                if(accept){
                    DeleteUserDTO userToSelect = new DeleteUserDTO(userSel.getUserID());
                    ServicesLocator.UserServices.deleteUser(userToSelect);
                    this.updateUI();
                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            UtilsConnector.viewMessagesUtils.showConecctionErrorMessage(this, ex);
        } catch (AdminNotDeleteAdminException ex) {
            UtilsConnector.viewMessagesUtils.showErrorMessage(this, "Siendo administrador no puedes eliminar a otro administrador");
        } catch (AtLeastOneAdminException ex) {
            UtilsConnector.viewMessagesUtils.showErrorMessage(this, "Debe quedar al menos un administrador.");
        } 
    }//GEN-LAST:event_deleteMenuActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        UtilsConnector.viewUtils.openDialog(this, new CreateUserUI(this));
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void editMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuActionPerformed
        int sR = this.jTable1.getSelectedRow();
        
        if(sR >= 0){
            ReadUserDTO su = this.users.get(sR);
            UpdateUserUI w = new UpdateUserUI(this, su);
            w.start();
            UtilsConnector.viewUtils.openDialog(this, w);
        }      // TODO add your handling code here:
    }//GEN-LAST:event_editMenuActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem deleteMenu;
    private javax.swing.JMenuItem editMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
