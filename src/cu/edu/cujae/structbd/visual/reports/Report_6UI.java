/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package cu.edu.cujae.structbd.visual.reports;

import cu.edu.cujae.structbd.dto.reports.ReadReport_6DTO;
import cu.edu.cujae.structbd.dto.team.ReadTeamDTO;
import cu.edu.cujae.structbd.services.ServicesLocator;
import cu.edu.cujae.structbd.utils.AppCustomDialog;
import cu.edu.cujae.structbd.utils.Connector;
import cu.edu.cujae.structbd.utils.UtilsConnector;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;


/**
 *
 * @author Amaya
 */
public class Report_6UI extends AppCustomDialog{

    /**
     * Creates new form Report_6DTO
     */
    public Report_6UI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
    }
    
    public void start(){
        try {
            initComponents();
            ArrayList<ReadTeamDTO> teams_list = ServicesLocator.TeamServices.readTeams();
            for (int i = 0; i < teams_list.size(); i++)
            {
                jComboBox1.addItem(teams_list.get(i).getTeam_name());
            }
        } catch (SQLException | ClassNotFoundException ex) {
            UtilsConnector.viewMessagesUtils.showConecctionErrorMessage(this, ex);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButtonClose = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estado de un equipo");
        setModal(true);

        jButtonClose.setText("Cerrar");
        jButtonClose.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonCloseActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Seleccionar>" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Escoger equipo:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Fase", "Jugados", "Ganados", "Perdidos", "Ganados Local", "Perdidos Local", "Ganados Visitante", "Perdidos Visitante"
            }
        ));
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonClose)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClose)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        this.update_list();
        if(jComboBox1.getSelectedIndex() != 0){
            try {
                String team = jComboBox1.getSelectedItem().toString();
                ArrayList<ReadTeamDTO> teams_list_2 = ServicesLocator.TeamServices.readTeams();
                boolean found_team = false;
                int team_id = 0;
                for (int i = 0; i < teams_list_2.size() && !found_team; i++)
                {
                    if (teams_list_2.get(i).getTeam_name().equalsIgnoreCase(team))
                    {
                        found_team = true;
                        team_id = teams_list_2.get(i).getTeam_id();
                    }
                }
                
                LinkedList<ReadReport_6DTO> list = new LinkedList<>(ServicesLocator.AppServices.getTeamStatus(team_id));
                Iterator<ReadReport_6DTO> it_list = list.iterator();
                while (it_list.hasNext())
                {
                    ReadReport_6DTO readReport_6DTO = it_list.next();
                    ((DefaultTableModel) jTable1.getModel()).addRow(new Object[]
                    {
                        readReport_6DTO.getPhaseName(), readReport_6DTO.getPlayed(), readReport_6DTO.getWon(),
                        readReport_6DTO.getLost(), readReport_6DTO.getWonAsHC(), readReport_6DTO.getLostAsHC(),
                        readReport_6DTO.getWonAsVis(), readReport_6DTO.getLostAsVis()
                    });
                }
            }
            catch (SQLException ex)
            {
                Logger.getLogger(Report_4UI.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (ClassNotFoundException ex)
            {
                Logger.getLogger(Report_4UI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        try
        {
                String team = jComboBox1.getSelectedItem().toString();
                ArrayList<ReadTeamDTO> teams_list_2 = ServicesLocator.TeamServices.readTeams();
                boolean found_team = false;
                int team_id = 0;
                for (int i = 0; i < teams_list_2.size() && !found_team; i++)
                {
                    if (teams_list_2.get(i).getTeam_name().equalsIgnoreCase(team))
                    {
                        found_team = true;
                        team_id = teams_list_2.get(i).getTeam_id();
                    }
                }
                
            HashMap<String, Object> parametros = new HashMap<>();
            parametros.put("id_team", team_id);
            UtilsConnector.export.exportToPDF("Report_6", parametros, team);
        }
        catch (JRException | SQLException | ClassNotFoundException ex)
        {
            UtilsConnector.viewMessagesUtils.showConecctionErrorMessage(this, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void update_list(){
        int rows = ((DefaultTableModel) jTable1.getModel()).getRowCount();
        for (int i = 0; i < rows; i++)
        {
            ((DefaultTableModel) jTable1.getModel()).removeRow(0);
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
